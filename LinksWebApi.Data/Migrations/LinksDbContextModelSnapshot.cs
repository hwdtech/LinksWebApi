// <auto-generated />
using System;
using LinksWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinksWebApi.Data.Migrations
{
    [DbContext(typeof(LinksDbContext))]
    partial class LinksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LinksWebApi.Data.Entities.RedirectionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<int>("SmartLinkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SmartLinkId");

                    b.ToTable("RedirectionRules");

                    b.HasDiscriminator<string>("RuleType").HasValue("RedirectionRule");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LinksWebApi.Data.Entities.SmartLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedOriginRelativeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginRelativeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedOriginRelativeUrl")
                        .IsUnique();

                    b.ToTable("SmartLinks");
                });

            modelBuilder.Entity("LinksWebApi.Data.Entities.LanguageRedirectionRule", b =>
                {
                    b.HasBaseType("LinksWebApi.Data.Entities.RedirectionRule");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("LanguageRedirectionRule");
                });

            modelBuilder.Entity("LinksWebApi.Data.Entities.TimeRedirectionRule", b =>
                {
                    b.HasBaseType("LinksWebApi.Data.Entities.RedirectionRule");

                    b.Property<DateTimeOffset?>("IntervalEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("IntervalStart")
                        .HasColumnType("datetimeoffset");

                    b.HasDiscriminator().HasValue("TimeRedirectionRule");
                });

            modelBuilder.Entity("LinksWebApi.Data.Entities.RedirectionRule", b =>
                {
                    b.HasOne("LinksWebApi.Data.Entities.SmartLink", "SmartLink")
                        .WithMany("RedirectionRules")
                        .HasForeignKey("SmartLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SmartLink");
                });

            modelBuilder.Entity("LinksWebApi.Data.Entities.SmartLink", b =>
                {
                    b.Navigation("RedirectionRules");
                });
#pragma warning restore 612, 618
        }
    }
}
